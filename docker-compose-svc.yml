version: '3.8'

services:
  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: "Jenkins-svc"
    restart: always
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./_storage/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - svc-net  

  registry:
    image: registry
    container_name: "local-registry-svc"
    restart: always
    volumes:
      - registry:/var/lib/registry
    ports:
      - 5000:5000
    networks:
      - svc-net    

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    # image: google/cadvisor        # Replaced image, doesn't work in linux
    container_name: "cadvisor"
    restart: unless-stopped
    # privileged: true
    devices:
    - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    # ports:                        # Removed exposed ports, not required
    #   - 8081:8080
    networks:
      - mon-net     
    
  prometheus:
    image: prom/prometheus:latest
    container_name: "prometheus"
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - mon-net 

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    restart: unless-stopped
    env_file: ./.env
    ports:
      - 3000:3000
    volumes:
      - ./grafana/prometheus_ds.yml:/etc/grafana/provisioning/datasources/prometheus.yml                # Prometheus data source
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml                      # Grafana Dashboard File
      - ./grafana/dashboard-wp.json:/etc/grafana/provisioning/dashboards/dashboard-wp.json              # Dashboards
      - ./grafana/dashboard-docker.json:/etc/grafana/provisioning/dashboards/dashboard-docker.json
      - ./grafana/dashboard-mariadb.json:/etc/grafana/provisioning/dashboards/dashboard-mariadb.json
    environment:
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin_pwd
      GF_USERS_ALLOW_SIGN_UP: ${GF_USERS_ALLOW_SIGN_UP}
    depends_on:
      - prometheus
    networks:
      - mon-net   
    secrets:
      - grafana_admin_pwd

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    container_name: elasticsearch
    ports: ["9200:9200"]
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "TAKE_FILE_OWNERSHIP=1"
    volumes:
      - "_storage/elasticsearch/data:/usr/share/elasticsearch/data"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kibana
    ports: ["5601:5601"]
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
    depends_on: ["elasticsearch"]
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/"]

  filebeat:
    image: docker.elastic.co/beats/filebeat:${TAG}
    container_name: filebeat
    command: --strict.perms=false -e
    user: root
    restart: on-failure
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
    volumes:
      - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "_storage/filebeat/data:/usr/share/filebeat/data"
      # - "./var/log/mysql:/var/log/mysql"
      - "/var/lib/docker/containers/:/var/lib/docker/containers/:ro"
      - "/proc:/hostfs/proc:ro"
      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
      - "/:/hostfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on: ["elasticsearch", "kibana"]


volumes:
  registry: {}
  prometheus: {}
  grafana: {}

networks:
  mon-net:
    name: mon-net
  svc-net:
    name: svc-net

secrets:
  grafana_admin_pwd:
    file: ./grafana/grafana_admin_pwd

